name: Experiments MCP - Publish to npm

on:
  push:
    branches: [main]
    paths:
      - 'packages/experiments-mcp/package.json'
  workflow_dispatch:

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        # Version is read from packageManager field in package.json
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build package
        run: pnpm --filter vishesh-experiments build
      
      - name: Run tests
        run: pnpm --filter vishesh-experiments test
      
      - name: Verify package contents
        run: |
          cd packages/experiments-mcp
          
          # Check required files exist
          if [ ! -f "dist/stdio.js" ]; then
            echo "Error: dist/stdio.js not found"
            exit 1
          fi
          
          if [ ! -f "dist/index.js" ]; then
            echo "Error: dist/index.js not found"
            exit 1
          fi
          
          if [ ! -d ".experiments" ]; then
            echo "Error: .experiments directory not found"
            exit 1
          fi
          
          # Check experiment count
          EXPERIMENT_COUNT=$(ls -1 .experiments/*.mdx 2>/dev/null | wc -l)
          if [ "$EXPERIMENT_COUNT" -lt 1 ]; then
            echo "Error: Expected at least 1 experiment, found $EXPERIMENT_COUNT"
            exit 1
          fi
          
          echo "‚úÖ Package verification passed"
          echo "‚úÖ Found $EXPERIMENT_COUNT experiments"
      
      - name: Get version from package.json
        id: get_version
        run: |
          cd packages/experiments-mcp
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Package version: $VERSION"
      
      - name: Check if version already published
        id: check_version
        run: |
          cd packages/experiments-mcp
          VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          
          # Check if this version exists on npm
          if npm view ${PACKAGE_NAME}@$VERSION version 2>/dev/null; then
            echo "Version $VERSION already published to npm"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION not yet published"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Publish to npm (dry run)
        if: steps.check_version.outputs.should_publish == 'true'
        run: |
          cd packages/experiments-mcp
          npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish to npm
        if: steps.check_version.outputs.should_publish == 'true'
        run: |
          cd packages/experiments-mcp
          npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Skip publishing (version already exists)
        if: steps.check_version.outputs.should_publish == 'false'
        run: |
          echo "‚è≠Ô∏è  Skipping publish - version already exists on npm"
      
      - name: Create GitHub Release
        if: steps.check_version.outputs.should_publish == 'true' && github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: experiments-mcp-v${{ steps.get_version.outputs.version }}
          release_name: Experiments MCP v${{ steps.get_version.outputs.version }}
          body: |
            ## vishesh-experiments v${{ steps.get_version.outputs.version }}
            
            Production-ready integration patterns via MCP.
            
            ### Installation
            ```bash
            npm install vishesh-experiments
            # or
            pnpm add vishesh-experiments
            # or use directly
            npx vishesh-experiments
            ```
            
            ### What's Included
            - 5+ battle-tested integration patterns
            - Full code examples from OSS contributions
            - MCP server for IDE integration
            - Mastra-compatible tools
            
            ### Documentation
            - [README](https://github.com/vishesh-baghel/portfolio/blob/main/packages/experiments-mcp/README.md)
            - [Testing Guide](https://github.com/vishesh-baghel/portfolio/blob/main/packages/experiments-mcp/TESTING.md)
            - [Changelog](https://github.com/vishesh-baghel/portfolio/blob/main/packages/experiments-mcp/CHANGELOG.md)
            
            ### Author
            **Vishesh Baghel** - [visheshbaghel.com](https://visheshbaghel.com)
          draft: false
          prerelease: false
      
      - name: Notify success
        if: success()
        run: |
          echo "‚úÖ Successfully published vishesh-experiments to npm"
          echo "üì¶ Package: https://www.npmjs.com/package/vishesh-experiments"
